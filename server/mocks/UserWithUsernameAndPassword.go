// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	user "github.com/freshteapot/learnalist-api/server/pkg/user"
	mock "github.com/stretchr/testify/mock"
)

// UserWithUsernameAndPassword is an autogenerated mock type for the UserWithUsernameAndPassword type
type UserWithUsernameAndPassword struct {
	mock.Mock
}

// Lookup provides a mock function with given fields: username, hash
func (_m *UserWithUsernameAndPassword) Lookup(username string, hash string) (string, error) {
	ret := _m.Called(username, hash)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(username, hash)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(username, hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: username, hash
func (_m *UserWithUsernameAndPassword) Register(username string, hash string) (user.UserInfoFromUsernameAndPassword, error) {
	ret := _m.Called(username, hash)

	var r0 user.UserInfoFromUsernameAndPassword
	if rf, ok := ret.Get(0).(func(string, string) user.UserInfoFromUsernameAndPassword); ok {
		r0 = rf(username, hash)
	} else {
		r0 = ret.Get(0).(user.UserInfoFromUsernameAndPassword)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(username, hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
