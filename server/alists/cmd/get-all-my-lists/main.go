package main

import (
	"encoding/json"
	"flag"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
)

func getLists(basicAuth string) []map[string]interface{} {
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	req, err := http.NewRequest("GET", "https://learnalist.net/api/v1/alist/by/me", nil)
	if err != nil {
		// handle err
	}
	req.Header.Set("Authorization", "Basic "+basicAuth)
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
	}
	b, _ := ioutil.ReadAll(resp.Body)
	defer resp.Body.Close()
	var items []map[string]interface{}
	json.Unmarshal(b, &items)

	return items
}

func saveLists(dataDir string, items []map[string]interface{}) {
	dataDir = strings.TrimRight(dataDir, "/")
	// TODO make sure the dataDir exists

	for _, item := range items {
		uuid := item["uuid"]
		content, _ := json.Marshal(item)
		path := fmt.Sprintf("%s/%s.json", dataDir, uuid)
		err := ioutil.WriteFile(path, content, 0644)
		if err != nil {
			fmt.Println(err)
		}
	}
}

func main() {
	basicAuth := flag.String("basic-auth", "", "basic auth for a learnalist api server")
	dataDir := flag.String("data-dir", "./data/lists/", "full path to data directory for the lists")
	flag.Parse()

	items := getLists(*basicAuth)
	saveLists(*dataDir, items)
}
