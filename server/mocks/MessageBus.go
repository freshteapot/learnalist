// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MessageBus is an autogenerated mock type for the MessageBus type
type MessageBus struct {
	mock.Mock
}

// Close provides a mock function with given fields: topic
func (_m *MessageBus) Close(topic string) {
	_m.Called(topic)
}

// Publish provides a mock function with given fields: topic, args
func (_m *MessageBus) Publish(topic string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, topic)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Subscribe provides a mock function with given fields: topic, fn
func (_m *MessageBus) Subscribe(topic string, fn interface{}) error {
	ret := _m.Called(topic, fn)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(topic, fn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Unsubscribe provides a mock function with given fields: topic, fn
func (_m *MessageBus) Unsubscribe(topic string, fn interface{}) error {
	ret := _m.Called(topic, fn)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(topic, fn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
