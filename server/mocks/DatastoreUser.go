// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	user "github.com/freshteapot/learnalist-api/server/pkg/user"
)

// DatastoreUser is an autogenerated mock type for the DatastoreUser type
type DatastoreUser struct {
	mock.Mock
}

// UserFromIDP provides a mock function with given fields:
func (_m *DatastoreUser) UserFromIDP() user.UserFromIDP {
	ret := _m.Called()

	var r0 user.UserFromIDP
	if rf, ok := ret.Get(0).(func() user.UserFromIDP); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(user.UserFromIDP)
		}
	}

	return r0
}

// UserSession provides a mock function with given fields:
func (_m *DatastoreUser) UserSession() user.Session {
	ret := _m.Called()

	var r0 user.Session
	if rf, ok := ret.Get(0).(func() user.Session); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(user.Session)
		}
	}

	return r0
}

// UserWithUsernameAndPassword provides a mock function with given fields:
func (_m *DatastoreUser) UserWithUsernameAndPassword() user.UserWithUsernameAndPassword {
	ret := _m.Called()

	var r0 user.UserWithUsernameAndPassword
	if rf, ok := ret.Get(0).(func() user.UserWithUsernameAndPassword); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(user.UserWithUsernameAndPassword)
		}
	}

	return r0
}
