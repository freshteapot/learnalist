// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AclWriterPlankHistory is an autogenerated mock type for the AclWriterPlankHistory type
type AclWriterPlankHistory struct {
	mock.Mock
}

// GrantUserPlankHistoryReadAccess provides a mock function with given fields: extUUID, userUUID
func (_m *AclWriterPlankHistory) GrantUserPlankHistoryReadAccess(extUUID string, userUUID string) error {
	ret := _m.Called(extUUID, userUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(extUUID, userUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MakePlankHistoryPrivate provides a mock function with given fields: extUUID, userUUID
func (_m *AclWriterPlankHistory) MakePlankHistoryPrivate(extUUID string, userUUID string) error {
	ret := _m.Called(extUUID, userUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(extUUID, userUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RevokeUserPlankHistoryReadAccess provides a mock function with given fields: extUUID, userUUID
func (_m *AclWriterPlankHistory) RevokeUserPlankHistoryReadAccess(extUUID string, userUUID string) error {
	ret := _m.Called(extUUID, userUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(extUUID, userUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SharePlankHistoryWithPublic provides a mock function with given fields: extUUID
func (_m *AclWriterPlankHistory) SharePlankHistoryWithPublic(extUUID string) error {
	ret := _m.Called(extUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(extUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
