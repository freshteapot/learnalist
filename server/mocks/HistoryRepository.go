// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	fix "github.com/freshteapot/learnalist-api/server/pkg/fix"
	mock "github.com/stretchr/testify/mock"
)

// HistoryRepository is an autogenerated mock type for the HistoryRepository type
type HistoryRepository struct {
	mock.Mock
}

// Exists provides a mock function with given fields: theFix
func (_m *HistoryRepository) Exists(theFix fix.Fixup) (bool, error) {
	ret := _m.Called(theFix)

	var r0 bool
	if rf, ok := ret.Get(0).(func(fix.Fixup) bool); ok {
		r0 = rf(theFix)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(fix.Fixup) error); ok {
		r1 = rf(theFix)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: theFix
func (_m *HistoryRepository) Save(theFix fix.Fixup) error {
	ret := _m.Called(theFix)

	var r0 error
	if rf, ok := ret.Get(0).(func(fix.Fixup) error); ok {
		r0 = rf(theFix)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
